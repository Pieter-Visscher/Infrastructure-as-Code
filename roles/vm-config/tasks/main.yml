- name: set default root password
  ansible.builtin.user:
    name: root
    update_password: always
    password: "{{ root_password|password_hash('sha512') }}"
  when: custom_root_password is undefined

- name: set custom root password
  ansible.builtin.user:
    name: root
    update_password: always
    password: "{{ custom_root_password|password_hash('sha512') }}"
  when: custom_root_password is defined

- name: enable root SSH through cloud-init
  ansible.builtin.lineinfile:
    path: /etc/cloud/cloud.cfg
    regexp: '^disable_root'
    line: "disable_root: false"
  register: cloudInitConfigState

- name: enable root SSH through cloud-init
  ansible.builtin.lineinfile:
    path: /etc/cloud/cloud.cfg
    regexp: '^ssh_pwauth'
    line: "ssh_pwauth: true"
  register: cloudInitConfigState

- name: regenerate cloud init
  ansible.builtin.command:
    cmd: /usr/bin/cloud-init clean
  when: cloudInitConfigState.changed

- name: lock down ssh-access 
  ansible.builtin.blockinfile:
    path: /etc/ssh/sshd_config
    block: |
      Match User ansible 
              PasswordAuthentication no
              AllowUsers ansible@{{ mgmt_ip1 }} ansible@{{ mgmt_ip2 }}
      PermitRootLogin prohibit-password
      Match User root
              AllowUsers root@{{ mgmt_ip1 }} root@{{ mgmt_ip3 }}
  register: sshConfigState

- name: restart sshd
  ansible.builtin.systemd_service:
    name: ssh.service
    state: restarted
  when: 
  - sshConfigState.changed
  - ansible_facts['os_family'] == 'Debian'

- name: Add Puppet repository for Debian
  ansible.builtin.apt:
    deb: "https://apt.puppet.com/puppet7-release-{{ ansible_distribution_release }}.deb"
  when: ansible_facts['os_family'] == "Debian"
  register: puppet_state_deb

- name: add puppet repository on alma
  ansible.builtin.dnf:
    name: "https://yum.puppet.com/puppet7-release-el-{{ ansible_distribution_major_version }}.noarch.rpm"
    state: present
  when: ansible_facts['os_family'] == 'RedHat'
  register: puppet_state_alma

- name: restart sshd
  ansible.builtin.systemd_service:
    name: sshd.service
    state: restarted
  when: 
  - sshConfigState.changed
  - ansible_facts['os_family'] == 'RedHat'

- name: apt update 
  ansible.builtin.apt:
    update_cache: yes 
  when: ansible_facts['os_family'] == 'Debian'

- name: install applications via apt
  ansible.builtin.apt:
    pkg:
    - tree
    - unzip
    - git
    - htop
    - net-tools 
    - ncdu
    - lsof
    - mlocate
    - qemu-guest-agent
    - vim
    - wget
    - puppet-agent
  when: ansible_facts['os_family'] == 'Debian'

- name: update cache dnf
  ansible.builtin.dnf:
    update_cache: yes
  when: ansible_facts['os_family'] == 'RedHat'

- name: install epel release
  ansible.builtin.dnf:
    name: epel-release
  when: ansible_facts['os_family'] == 'RedHat'

- name: update cache dnf
  ansible.builtin.dnf:
    update_cache: yes
  when: ansible_facts['os_family'] == 'RedHat'

- name: install applications via dnf
  ansible.builtin.dnf:
    pkg:
    - tree
    - unzip
    - git
    - htop
    - net-tools 
    - ncdu
    - lsof
    - mlocate
    - qemu-guest-agent
    - vim
    - wget
    - puppet-agent
  when: ansible_facts['os_family'] == 'RedHat'

- name: set puppet config
  ansible.builtin.blockinfile:
    path: /etc/puppetlabs/puppet/puppet.conf 
    block: |
      [main]
      server = puppet.pieter.fish

- name: enable qemu guest agent 
  ansible.builtin.systemd_service:
    name: qemu-guest-agent.service
    state: started 
    enabled: true

- name: enable pupppet agent
  ansible.builtin.systemd_service:
    name: puppet.service
    enabled: true

- name: reboot
  ansible.builtin.reboot:
    reboot_timeout: 300
  when: cloudInitConfigState.changed

- name: wait for puppet agent to notify puppet server
  ansible.builtin.wait_for:
    timeout: 30

- name: Store the original ansible_host
  set_fact:
    original_ansible_host: "{{ ansible_host }}"

- name: accept CSR on puppet server
  ansible.builtin.command: /opt/puppetlabs/bin/puppetserver ca sign --certname "{{ original_ansible_host }}"
  when: puppet_state_deb.changed or puppet_state_alma.changed
  delegate_to: puppet.pieter.fish

- name: create yaml in hiera
  ansible.builtin.file:
    path: "/etc/puppetlabs/code/environments/production/data/nodes/{{ original_ansible_host }}.yaml"
    state: touch
    owner: root
    group: root
    mode: '0644'
  delegate_to: puppet.pieter.fish
  when: puppet_state_deb.changed or puppet_state_alma.changed
